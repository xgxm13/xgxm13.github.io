{
    "version": "https://jsonfeed.org/version/1",
    "title": "筱何仔 • All posts by \"vue\" tag",
    "description": "",
    "home_page_url": "https://blog.mengcodes.com",
    "items": [
        {
            "id": "https://blog.mengcodes.com/Web/Vue/2023/07/12/1/",
            "url": "https://blog.mengcodes.com/Web/Vue/2023/07/12/1/",
            "title": "Websocket的使用",
            "date_published": "2023-07-12T07:48:35.000Z",
            "content_html": "<p>Websocket 在项目中的应用<br />\n<a id=\"more\"></a></p>\n<h1 id=\"在vue3-中使用-websocket\"><a class=\"anchor\" href=\"#在vue3-中使用-websocket\">#</a> 在 Vue3 中使用 Websocket</h1>\n<h2 id=\"在utils目录下新建-websocketjs文件\"><a class=\"anchor\" href=\"#在utils目录下新建-websocketjs文件\">#</a> 在 utils 目录下新建 webSocket.js 文件</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 参数说明：</span></span><br><span class=\"line\"><span class=\"comment\"> *  webSocketURL：String    webSocket服务地址    eg: ws://127.0.0.1:8088/websocket (后端接口若为restful风格可以带参数)</span></span><br><span class=\"line\"><span class=\"comment\"> *  callback：为带一个参数的回调函数</span></span><br><span class=\"line\"><span class=\"comment\"> *  message：String 要传递的参数值（不是一个必要的参数）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化webSocket</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">webSocketInit</span>(<span class=\"params\">webSocketURL</span>)</span>&#123;      <span class=\"comment\">// ws://127.0.0.1:8088/websocket</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket = <span class=\"keyword\">new</span> WebSocket(webSocketURL);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onopen = <span class=\"built_in\">this</span>.onOpenwellback;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onmessage = <span class=\"built_in\">this</span>.onMessageCallback;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onerror = <span class=\"built_in\">this</span>.onErrorCallback;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onclose = <span class=\"built_in\">this</span>.onCloseCallback;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 自定义回调函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setOpenCallback</span>(<span class=\"params\">callback</span>)</span>&#123; <span class=\"comment\">//  与服务端连接打开回调函数</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onopen = callback;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setMessageCallback</span>(<span class=\"params\">callback</span>)</span>&#123;   <span class=\"comment\">//  与服务端发送消息回调函数</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onmessage = callback;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setErrorCallback</span>(<span class=\"params\">callback</span>)</span>&#123; <span class=\"comment\">//  与服务端连接异常回调函数</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onerror = callback;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setCloseCallback</span>(<span class=\"params\">callback</span>)</span>&#123; <span class=\"comment\">//  与服务端连接关闭回调函数</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.onclose = callback;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">close</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.close();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">sendMessage</span>(<span class=\"params\">message</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.webSocket.send(message);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"在文件中引用\"><a class=\"anchor\" href=\"#在文件中引用\">#</a> 在文件中引用</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> webSocket <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/webSocket&#x27;</span>;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化websocket</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWebsocket</span>(<span class=\"params\">id</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> webSocketUrl = <span class=\"keyword\">import</span>.meta.env.VITE_APP_SOCKET_API;</span><br><span class=\"line\">  webSocket.webSocketInit(webSocketUrl + <span class=\"string\">`/websocket/platform<span class=\"subst\">$&#123;id&#125;</span>`</span>); <span class=\"comment\">//初始化webSocket</span></span><br><span class=\"line\">  webSocket.setOpenCallback(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;连接建立成功&quot;</span>,res);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  webSocket.setMessageCallback(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> resData = <span class=\"built_in\">JSON</span>.parse(res.data);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;接收到回信&#x27;</span>, resData);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; data, type &#125; = resData;</span><br><span class=\"line\">    <span class=\"comment\">// 根据不同的type 去执行不同的操作 </span></span><br><span class=\"line\">    <span class=\"comment\">// 登录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;3&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; nickName, userDept, userName &#125; = data;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">      <span class=\"comment\">// 退出</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;4&#x27;</span>) &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;5&#x27;</span>) &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;1&#x27;</span>) &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  webSocket.setErrorCallback(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;连接异常&#x27;</span>, res);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"uniappvue2中使用websocket\"><a class=\"anchor\" href=\"#uniappvue2中使用websocket\">#</a> uniapp（vue2）中使用 websocket</h1>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化时调用</span></span><br><span class=\"line\">  <span class=\"built_in\">this</span>.connectSocket()</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"comment\">//连接websocket</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">connectSocket</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;调用连接websocket&#x27;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask = uni.connectSocket(&#123;</span><br><span class=\"line\">        url:</span><br><span class=\"line\">          globalConfig.webSocketUrl +</span><br><span class=\"line\">          <span class=\"string\">`/websocket/uniapp<span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.$store.state.userInfo.user.userId&#125;</span>`</span>,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\">res</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;websocket连接成功&#x27;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">fail</span>(<span class=\"params\">err</span>)</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;报错&#x27;</span>, err);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask.onOpen(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;WebSocket连接已打开！&#x27;</span>);</span><br><span class=\"line\">        that.heart()</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask.onMessage(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> resData = <span class=\"built_in\">JSON</span>.parse(res.data);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;接收到回信&#x27;</span>, resData);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; data, type &#125; = resData;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (type == <span class=\"string\">&#x27;6&#x27;</span>) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask.onError(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;WebSocket连接打开失败，请检查！&#x27;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">        <span class=\"comment\">//进入重新连接</span></span><br><span class=\"line\">        that.reconnect();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">// // 监听连接关闭 -</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask.onClose(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;WebSocket连接关闭！&#x27;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// clearInterval(that.timer)</span></span><br><span class=\"line\">        <span class=\"comment\">// that.timer = &#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// if (!that.isClose) &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">// that.reconnect()</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">// console.log(this.socketTask)</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//进入重新连接</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">reconnect</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;进入断线重连&#x27;</span>);</span><br><span class=\"line\">      <span class=\"comment\">// this.socketTask.close();</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.socketTask = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.connectSocket();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//发送消息</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">sendSocketMessage</span>(<span class=\"params\">msg</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;发送信息&#x27;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(msg);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">reslove, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.socketTask.send(&#123;</span><br><span class=\"line\">          data: msg,</span><br><span class=\"line\">          <span class=\"function\"><span class=\"title\">success</span>(<span class=\"params\">res</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;发送成功&#x27;</span>);</span><br><span class=\"line\">            reslove(res);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"function\"><span class=\"title\">fail</span>(<span class=\"params\">res</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;发送失败&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">            reject(res);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//心跳</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">heart</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> that = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.timer);</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.timer = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> msg = &#123;</span><br><span class=\"line\">        type: <span class=\"string\">&#x27;heartbeat&#x27;</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        that</span><br><span class=\"line\">          .sendSocketMessage(<span class=\"built_in\">JSON</span>.stringify(msg))</span><br><span class=\"line\">          .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;心跳成功&#x27;</span>);</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .catch(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;发送失败&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">      &#125;, <span class=\"number\">200000</span>);</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure><br />\n<span class=\"label danger\">❤️筱何仔</span></p>\n",
            "tags": [
                "前端",
                "Vue"
            ]
        },
        {
            "id": "https://blog.mengcodes.com/Web/Vue/2021/02/22/1/",
            "url": "https://blog.mengcodes.com/Web/Vue/2021/02/22/1/",
            "title": "Vuex入门及使用",
            "date_published": "2021-02-22T07:54:46.000Z",
            "content_html": "<p>一个小例子掌握 Vuex 入门知识<br />\n<a id=\"more\"></a></p>\n<p>自己也是通过学习视频才了解的，前排感谢 B 站 up 主 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWg3NDExTjdiZz9wPTE=\"> 云繁 EST </span></p>\n<h1 id=\"vuex概述\"><a class=\"anchor\" href=\"#vuex概述\">#</a> Vuex 概述</h1>\n<p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。Vuex 是实现组件全局状态（数据）管理的一种机制，可以方便地实现组件之间数据的共享。</p>\n<h1 id=\"vuex的基本使用\"><a class=\"anchor\" href=\"#vuex的基本使用\">#</a> Vuex 的基本使用</h1>\n<h2 id=\"1安装vuex依赖包\"><a class=\"anchor\" href=\"#1安装vuex依赖包\">#</a> 1. 安装 vuex 依赖包</h2>\n<p><figure class=\"highlight js\"><figcaption><span>安装vuex依赖包</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vuex --save</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2导入vuex包\"><a class=\"anchor\" href=\"#2导入vuex包\">#</a> 2. 导入 Vuex 包</h2>\n<p><figure class=\"highlight js\"><figcaption><span>导入</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用</span></span><br><span class=\"line\">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3创建store对象\"><a class=\"anchor\" href=\"#3创建store对象\">#</a> 3. 创建 store 对象</h2>\n<p><figure class=\"highlight js\"><figcaption><span>创建store对象</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.store(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// state 中存放的就是全局共享的数据</span></span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4将store对象挂载到-vue-实例中\"><a class=\"anchor\" href=\"#4将store对象挂载到-vue-实例中\">#</a> 4. 将 store 对象挂载到 vue 实例中</h2>\n<p><figure class=\"highlight js\"><figcaption><span>将store对象挂载到 vue 实例中</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  <span class=\"comment\">// 将创建的共享数据对象，挂载到Vue实例中</span></span><br><span class=\"line\">  <span class=\"comment\">// 所有组件中，都可以直接从 store 中获取全局的数据</span></span><br><span class=\"line\">  store,</span><br><span class=\"line\">  render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><br />\n 我们可以通过一个小例子来熟悉 vuex 的用法：<span class=\"blue\">父组件 App.vue 上引入两个子组件，一个加法操作的 add.vue 子组件，一个减法操作的 minus.vue 子组件。父组件引入并渲染 Vuex 中的 全局共享的数据 count，通过加减法的运算来了解 count 发生的变化。</span></p>\n<ul>\n<li>我们把两个组件分隔开 准备工作完成后的 App.vue 代码如下：<br />\n<figure class=\"highlight js\"><figcaption><span>代码</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;Add&gt;&lt;/Add&gt;</span><br><span class=\"line\">    &lt;p&gt;--------------------------&lt;/p&gt;</span><br><span class=\"line\">    &lt;Minus&gt;&lt;/Minus&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Add <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/add&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Minus <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/minus&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    Add,</span><br><span class=\"line\">    Minus</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"state\"><a class=\"anchor\" href=\"#state\">#</a> State</h1>\n<p>State 提供唯一的公共数据源，所有共享的数据都要统一放到 Store 的 State 中进行存储。</p>\n<ul>\n<li>我们需要在 add 和 minus 组件中 都能访问到 当前最新的 count 值 有如下两种方式</li>\n</ul>\n<h2 id=\"方法一thisstorestate全局数据名称\"><a class=\"anchor\" href=\"#方法一thisstorestate全局数据名称\">#</a> 方法一：this.$store.state. 全局数据名称</h2>\n<ul>\n<li>在 add 组件中的代码<br />\n <figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h3&gt;当前count值为：&#123;&#123;$store.state.count&#125;&#125;&lt;/h3&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"方法二1从vuex中按需引入-mapstate-对象-2将全局数据映射为当前组件的计算属性\"><a class=\"anchor\" href=\"#方法二1从vuex中按需引入-mapstate-对象-2将全局数据映射为当前组件的计算属性\">#</a> 方法二：①从 vuex 中按需引入 mapState 对象 ②将全局数据映射为当前组件的计算属性</h2>\n<ul>\n<li>在 minus 组件中的代码<br />\n <figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 从vuex中按需引入 mapState 对象</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 将全局数据映射为当前组件的计算属性</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  ...mapState([<span class=\"string\">&#x27;count&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 页面代码</span></span><br><span class=\"line\">&lt;h3&gt;当前count值为：&#123;&#123;count&#125;&#125;&lt;/h3&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"getter\"><a class=\"anchor\" href=\"#getter\">#</a> Getter</h1>\n<p>Getter 用于对 Store 中的数据进行加工处理形成新的数据<br />\n① Getter 可以对 Store 中已经存在的数据加工处理形成新的数据，类似 Vue 的计算属性<br />\n② Store 中数据发生变化，Getter 的数据也会跟着变化</p>\n<ul>\n<li>我们可以在 store 的 state 中新加一个 doubleCount 返回当前 count 数值的 2 倍<br />\n <figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doubleCount (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`看我翻倍----  <span class=\"subst\">$&#123;state.count * <span class=\"number\">2</span>&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>Getter 相当于计算属性，使用方法与 state 中的数据一样<br />\n <figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在add组件中的代码</span></span><br><span class=\"line\">&lt;h3&gt;当前doubleCount值为：&#123;&#123;$store.state.doubleCount&#125;&#125;&lt;/h3&gt;</span><br><span class=\"line\"><span class=\"comment\">// 在minus组件中的代码</span></span><br><span class=\"line\"><span class=\"comment\">// 从vuex中按需引入 mapGetters 对象</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 将全局数据映射为当前组件的计算属性</span></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  ...mapGetters([<span class=\"string\">&#x27;doubleCount&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"mutation\"><a class=\"anchor\" href=\"#mutation\">#</a> Mutation</h1>\n<p>Mutation 用于变更 Store 中的数据<br />\n① 只能通过 Mutation 变更 Store 中的数据，不可以直接操作 Store 中的数据<br />\n② 通过这种方式虽然操作稍微繁琐，但是可以集中监控所有公共数据的变化<br />\n <figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// store 目录下的 index.js 定义 Mutation</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接收的参数 一个是 store里面的state，另一个是我们传的其他数据</span></span><br><span class=\"line\">    add (state, step) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果无参数</span></span><br><span class=\"line\">      step ? state.count += step : state.count++</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    minus (state, step) &#123;</span><br><span class=\"line\">      step ? state.count -= step : state.count--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>我们可以在 add 组件和 minus 组件中添加按钮，动态改变 State 中 count 的值，有以下两种方式</li>\n</ul>\n<h2 id=\"方法一-thisstorecommit方法名称-其他参数\"><a class=\"anchor\" href=\"#方法一-thisstorecommit方法名称-其他参数\">#</a> 方法一: this.$store.commit (' 方法名称 ', 其他参数)</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// add组件代码</span></span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;add1&quot;</span>&gt; +<span class=\"number\">1</span> &lt;/button&gt;</span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;add2&quot;</span>&gt; +N &lt;/button&gt;</span><br><span class=\"line\">...</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  add1 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$store.commit(<span class=\"string\">&#x27;add&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  add2 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$store.commit(<span class=\"string\">&#x27;add&#x27;</span>, <span class=\"built_in\">this</span>.numN)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二1从vuex中按需引入-mapmutations-函数-2将需要的-mutations-函数映射为当前组件的-methods-方法\"><a class=\"anchor\" href=\"#方法二1从vuex中按需引入-mapmutations-函数-2将需要的-mutations-函数映射为当前组件的-methods-方法\">#</a> 方法二：①从 vuex 中按需引入 mapMutations 函数 ②将需要的 mutations 函数，映射为当前组件的 methods 方法</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// minus组件代码</span></span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;reduce1&quot;</span>&gt; -<span class=\"number\">1</span> &lt;/button&gt;</span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;reduce2&quot;</span>&gt; -N &lt;/button&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\">···</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  ...mapMutations([<span class=\"string\">&#x27;minus&#x27;</span>]),</span><br><span class=\"line\">  reduce1 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.minus()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  reduce2 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.minus(<span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"action\"><a class=\"anchor\" href=\"#action\">#</a> Action</h1>\n<p>Action 用于处理异步任务。<br />\n如果通过异步操作变更数据，必须通过 Action，而不能使用 Mutation，但是在 Action 中还是要通过触发 Mutation 的方式间接变更数据。</p>\n<ul>\n<li>我们可以在 store 目录下的 index.js 中声明两个 异步方法 addAsync 和 minusAsync<br />\n<figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    add (state, step) &#123;</span><br><span class=\"line\">      step ? state.count += step : state.count++</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    minus (state, step) &#123;</span><br><span class=\"line\">      step ? state.count -= step : state.count--</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    addAsync (context, step) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        context.commit(<span class=\"string\">&#x27;add&#x27;</span>, step)</span><br><span class=\"line\">      &#125;, <span class=\"number\">500</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    minusAsync (context, step) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        context.commit(<span class=\"string\">&#x27;minus&#x27;</span>, step)</span><br><span class=\"line\">      &#125;, <span class=\"number\">500</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li>触发 Action 函数的两种方式</li>\n</ul>\n<h2 id=\"方法一thisstoredispatch方法名称-其他参数\"><a class=\"anchor\" href=\"#方法一thisstoredispatch方法名称-其他参数\">#</a> 方法一：this.$store.dispatch (' 方法名称 ', 其他参数)</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// add组件代码</span></span><br><span class=\"line\"><span class=\"comment\">// 页面</span></span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;add3&quot;</span>&gt; +N Async &lt;/button&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  add3 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$store.dispatch(<span class=\"string\">&#x27;addAsync&#x27;</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"方法二1从-vuex-中按需引入-mapactons-函数-2将指定的-actions-函数映射为当前组件的-methods-函数\"><a class=\"anchor\" href=\"#方法二1从-vuex-中按需引入-mapactons-函数-2将指定的-actions-函数映射为当前组件的-methods-函数\">#</a> 方法二：①从 vuex 中按需引入 mapActons 函数 ②将指定的 actions 函数，映射为当前组件的 methods 函数</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// minus组件代码</span></span><br><span class=\"line\"><span class=\"comment\">// 页面代码</span></span><br><span class=\"line\">&lt;button @click=<span class=\"string\">&quot;reduce3&quot;</span>&gt; -&#123;&#123;numN&#125;&#125; Async &lt;/button&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\">···</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  ...mapActions([<span class=\"string\">&#x27;minusAsync&#x27;</span>])</span><br><span class=\"line\">  reduce3 () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.minusAsync(<span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"module\"><a class=\"anchor\" href=\"#module\">#</a> Module</h1>\n<p>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</p>\n<p>为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块 —— 从上至下进行同样方式的分割：<br />\n<figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  state: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  mutations: &#123; ... &#125;,</span><br><span class=\"line\">  actions: &#123; ... &#125;,</span><br><span class=\"line\">  getters: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\">  state: <span class=\"function\">() =&gt;</span> (&#123; ... &#125;),</span><br><span class=\"line\">  mutations: &#123; ... &#125;,</span><br><span class=\"line\">  actions: &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  modules: &#123;</span><br><span class=\"line\">    a: moduleA,</span><br><span class=\"line\">    b: moduleB</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">store.state.a <span class=\"comment\">// -&gt; moduleA 的状态</span></span><br><span class=\"line\">store.state.b <span class=\"comment\">// -&gt; moduleB 的状态</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>对于模块内部的 mutation 和 getter，接收的第一个参数是模块的局部状态对象。<br />\n<figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  state: <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  mutations: &#123;</span><br><span class=\"line\">    increment (state) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 这里的 `state` 对象是模块的局部状态</span></span><br><span class=\"line\">      state.count++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    doubleCount (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count * <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>同样，对于模块内部的 action，局部状态通过 context.state 暴露出来，根节点状态则为 context.rootState<br />\n<figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    incrementIfOddOnRootSum (&#123; state, commit, rootState &#125;) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// tate(局部状态),commit,roosState（根状态）</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((state.count + rootState.count) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        commit(<span class=\"string\">&#x27;increment&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>对于模块内部的 getter，根节点状态会作为第三个参数暴露出来：<br />\n<figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  getters: &#123;</span><br><span class=\"line\">    sumWithRootCount (state, getters, rootState) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// state(局部状态),getters（全局getters对象）,roosState（根状态）</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.count + rootState.count</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"module-其他内容\"><a class=\"anchor\" href=\"#module-其他内容\">#</a> Module 其他内容</h2>\n<ul>\n<li>Module 其他内容 请移步官网 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWV4LnZ1ZWpzLm9yZy96aC9ndWlkZS9tb2R1bGVzLmh0bWw=\"> modules </span></li>\n</ul>\n<hr />\n<p><span class=\"label danger\">❤️筱何仔</span></p>\n",
            "tags": [
                "前端",
                "Vue",
                "Vuex"
            ]
        },
        {
            "id": "https://blog.mengcodes.com/Web/Vue/2021/02/09/3/",
            "url": "https://blog.mengcodes.com/Web/Vue/2021/02/09/3/",
            "title": "一些Vue公共方法",
            "date_published": "2021-02-09T09:10:33.000Z",
            "content_html": "<p>一些 Vue 公共方法<br />\n<a id=\"more\"></a></p>\n<h1 id=\"common-functions\"><a class=\"anchor\" href=\"#common-functions\">#</a> Common Functions</h1>\n<h2 id=\"vue路由跳转\"><a class=\"anchor\" href=\"#vue路由跳转\">#</a> vue 路由跳转</h2>\n<p><figure class=\"highlight js\"><figcaption><span>方法</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 第一步</span></span><br><span class=\"line\"><span class=\"comment\">// 方法放在common.js里</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toPage</span> (<span class=\"params\">path, query</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (query) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.push(&#123;</span><br><span class=\"line\">      path,</span><br><span class=\"line\">      query</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.push(&#123;</span><br><span class=\"line\">      path</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 其他代码</span></span><br><span class=\"line\">···</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// 记得导出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  toPage</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  ···</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 第二步</span></span><br><span class=\"line\"><span class=\"comment\">// 挂载在vue全局</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> commonFunction <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./common&#x27;</span></span><br><span class=\"line\">Vue.prototype.$toPage = commonFunction.toPage</span><br><span class=\"line\"><span class=\"comment\">// 第三步</span></span><br><span class=\"line\"><span class=\"comment\">// 页面中使用</span></span><br><span class=\"line\"><span class=\"comment\">// 无参数</span></span><br><span class=\"line\"><span class=\"built_in\">this</span>.$toPage(<span class=\"string\">`/home`</span>)</span><br><span class=\"line\"><span class=\"comment\">// 有参数</span></span><br><span class=\"line\"><span class=\"built_in\">this</span>.$toPage(<span class=\"string\">`/AfterLhygOrderPay/AfterLhygOrderPayQrCode/<span class=\"subst\">$&#123;code&#125;</span>/<span class=\"subst\">$&#123;currentPaymentCode&#125;</span>/<span class=\"subst\">$&#123;item.paymentType&#125;</span>`</span>)</span><br><span class=\"line\"><span class=\"comment\">// query</span></span><br><span class=\"line\"><span class=\"built_in\">this</span>.$toPage(<span class=\"string\">`/customManagement/<span class=\"subst\">$&#123;code&#125;</span>/photos`</span>, addCode)</span><br><span class=\"line\"><span class=\"built_in\">this</span>.$toPage(<span class=\"string\">`/Worker/ContractTxt`</span>, &#123; <span class=\"attr\">id</span>: item.id, <span class=\"attr\">contractCode</span>: item.contractCode, <span class=\"attr\">roleName</span>: <span class=\"built_in\">this</span>.roleName &#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"去除字符串空格\"><a class=\"anchor\" href=\"#去除字符串空格\">#</a> 去除字符串空格</h2>\n<p><figure class=\"highlight js\"><figcaption><span>示例</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 去除字符串空格 用法同上</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trim</span> (<span class=\"params\">str, isGlobal = <span class=\"literal\">false</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!str) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  str = str.replace(<span class=\"regexp\">/(^\\s+)|(\\s+$)/g</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isGlobal) str = str.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"对象按某个属性排序\"><a class=\"anchor\" href=\"#对象按某个属性排序\">#</a> 对象按某个属性排序</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;金刚&#x27;</span>, <span class=\"attr\">height</span>: <span class=\"number\">120</span>, <span class=\"attr\">weight</span>: <span class=\"number\">180</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;哥斯拉&#x27;</span>, <span class=\"attr\">height</span>: <span class=\"number\">138</span>, <span class=\"attr\">weight</span>: <span class=\"number\">220</span>&#125;,</span><br><span class=\"line\">  &#123;<span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;机械哥斯拉&#x27;</span>, <span class=\"attr\">height</span>: <span class=\"number\">130</span>, <span class=\"attr\">weight</span>: <span class=\"number\">190</span>&#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// 按某个属性（数字）排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">compare</span>(<span class=\"params\">prop</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value1 = a[prop]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value2 = b[prop]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value1 - value2</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组按某个属性（非数字）排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">prop</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value1 = a?.[prop];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> value2 = b?.[prop];</span><br><span class=\"line\">    <span class=\"comment\">// return (a.name + &#x27;&#x27;).localeCompare(b.name + &#x27;&#x27;)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value1.localeCompare(value2);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.sort(compare(<span class=\"string\">&#x27;height&#x27;</span>)))  <span class=\"comment\">//返回对象height从小到大正向排序</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>下面內容 更新于 2023 年 7 月 12 日</li>\n</ul>\n<h2 id=\"防抖\"><a class=\"anchor\" href=\"#防抖\">#</a> 防抖</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Function&#125;</span> <span class=\"variable\">func</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">wait</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;boolean&#125;</span> <span class=\"variable\">immediate</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;*&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">func, wait, immediate</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timeout, args, context, timestamp, result</span><br><span class=\"line\">  <span class=\"keyword\">const</span> later = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 据上一次触发时间间隔</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> last = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() - timestamp</span><br><span class=\"line\">    <span class=\"comment\">// 上次被包装函数被调用时间间隔 last 小于设定时间间隔 wait</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (last &lt; wait &amp;&amp; last &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      timeout = <span class=\"built_in\">setTimeout</span>(later, wait - last)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      timeout = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"comment\">// 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!immediate) &#123;</span><br><span class=\"line\">        result = func.apply(context, args)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!timeout) context = args = <span class=\"literal\">null</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) </span>&#123;</span><br><span class=\"line\">    context = <span class=\"built_in\">this</span></span><br><span class=\"line\">    timestamp = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    <span class=\"keyword\">const</span> callNow = immediate &amp;&amp; !timeout</span><br><span class=\"line\">    <span class=\"comment\">// 如果延时不存在，重新设定延时</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!timeout) timeout = <span class=\"built_in\">setTimeout</span>(later, wait)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (callNow) &#123;</span><br><span class=\"line\">      result = func.apply(context, args)</span><br><span class=\"line\">      context = args = <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用时 先引入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; debounce &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 再调用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> handlePutOnShelves = debounce(<span class=\"function\">() =&gt;</span> &#123;&#125;, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"节流\"><a class=\"anchor\" href=\"#节流\">#</a> 节流</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 节流</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span> (<span class=\"params\">fn, wait</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> callback = fn</span><br><span class=\"line\">  <span class=\"keyword\">let</span> timerId = <span class=\"literal\">null</span></span><br><span class=\"line\">  <span class=\"comment\">// 是否是第一次执行</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> firstInvoke = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttled</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果是第一次触发，直接执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (firstInvoke) &#123;</span><br><span class=\"line\">      callback.apply(context, args)</span><br><span class=\"line\">      firstInvoke = <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果定时器已存在，直接返回。        </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timerId) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timerId = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 注意这里 将 clearTimeout 放到 内部来执行了</span></span><br><span class=\"line\">      <span class=\"built_in\">clearTimeout</span>(timerId)</span><br><span class=\"line\">      timerId = <span class=\"literal\">null</span></span><br><span class=\"line\">      callback.apply(context, args)</span><br><span class=\"line\">    &#125;, wait)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 返回一个闭包</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> throttled</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"首字母大写\"><a class=\"anchor\" href=\"#首字母大写\">#</a> 首字母大写</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 首字母大写</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">titleCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/( |^)[a-z]/g</span>, <span class=\"function\"><span class=\"params\">L</span> =&gt;</span> L.toUpperCase())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下划线转驼峰\"><a class=\"anchor\" href=\"#下划线转驼峰\">#</a> 下划线转驼峰</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 下划转驼峰</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">camelCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/_[a-z]/g</span>, <span class=\"function\"><span class=\"params\">str1</span> =&gt;</span> str1.substr(-<span class=\"number\">1</span>).toUpperCase())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"根据身份证号码计算年龄\"><a class=\"anchor\" href=\"#根据身份证号码计算年龄\">#</a> 根据身份证号码计算年龄</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据身份证号码计算年龄</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>idCard 身份证</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns </span>返回处理后的字符串</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAgeAndSexByidCard</span>(<span class=\"params\">idCard:any</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sex = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 计算性别</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (idCard.substr(<span class=\"number\">16</span>, <span class=\"number\">1</span>) % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        sex = <span class=\"string\">&#x27;1&#x27;</span>; <span class=\"comment\">//男</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        sex = <span class=\"string\">&#x27;2&#x27;</span>; <span class=\"comment\">//女</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> birthYear = idCard.substring(<span class=\"number\">6</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> monthBirth = idCard.substring(<span class=\"number\">10</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> birthDay = idCard.substring(<span class=\"number\">12</span>, <span class=\"number\">14</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前年月日</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> myDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> nowMonth = myDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> nowDay = myDate.getDay();</span><br><span class=\"line\">    <span class=\"comment\">// 计算年龄</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> age = myDate.getFullYear() - birthYear;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nowMonth &lt; monthBirth || (nowMonth === monthBirth &amp;&amp; nowDay &lt; birthDay)) &#123;</span><br><span class=\"line\">        age -= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;sex,age&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"动态计算table高度\"><a class=\"anchor\" href=\"#动态计算table高度\">#</a> 动态计算 table 高度</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 动态计算table高度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>dom el-table结构的dom结构</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>num 页面除table结构之外的内容高度</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>tableHeight el-table的height值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setTableHeight</span>(<span class=\"params\">dom:any, num:number, tableHeight:any</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tableOffsetTop = dom.offsetTop + num</span><br><span class=\"line\">    <span class=\"keyword\">let</span> windowHeight = <span class=\"built_in\">document</span>.documentElement.clientHeight || <span class=\"built_in\">document</span>.body.clientHeight;</span><br><span class=\"line\">    tableHeight.value = windowHeight - tableOffsetTop;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用时</span></span><br><span class=\"line\"><span class=\"comment\">// 动态设置table高度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTableHeight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    setTableHeight(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;.tableOffsetTop&#x27;</span>), <span class=\"number\">80</span>, tableHeight);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"合并表格\"><a class=\"anchor\" href=\"#合并表格\">#</a> 合并表格</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从第一列开始合并，其中maxCol为从第一列开始数，要合并多少列</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rowSpanFromStart</span>(<span class=\"params\">index</span>) </span>&#123;</span><br><span class=\"line\">  nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tab = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">`print-outbound-table-<span class=\"subst\">$&#123;index&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxCol = <span class=\"number\">2</span>,</span><br><span class=\"line\">      val,</span><br><span class=\"line\">      count,</span><br><span class=\"line\">      start;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> col = maxCol - <span class=\"number\">1</span>; col &gt;= <span class=\"number\">0</span>; col--) &#123;</span><br><span class=\"line\">      count = <span class=\"number\">1</span>;</span><br><span class=\"line\">      val = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tab.rows.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (val == tab.rows[i].cells[col].innerHTML) &#123;</span><br><span class=\"line\">          count++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//合并</span></span><br><span class=\"line\">            start = i - count;</span><br><span class=\"line\">            tab.rows[start].cells[col].rowSpan = count;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = start + <span class=\"number\">1</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">              tab.rows[j].cells[col].style.display = <span class=\"string\">&#x27;none&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count = <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          val = tab.rows[i].cells[col].innerHTML;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (count &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//合并，最后几行相同的情况下</span></span><br><span class=\"line\">        start = i - count;</span><br><span class=\"line\">        tab.rows[start].cells[col].rowSpan = count;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = start + <span class=\"number\">1</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">          tab.rows[j].cells[col].style.display = <span class=\"string\">&#x27;none&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"对象数组是否重复\"><a class=\"anchor\" href=\"#对象数组是否重复\">#</a> 对象数组是否重复</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>arr 如：var arr = [&#123;name: &quot;123&quot;, age : 123&#125;, &#123;name:&quot;1234432&quot;, age : 1234324&#125;]</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>key1 如：&quot;name&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param </span>key2 如：&quot;age&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@retutns </span>boolean: true：不存在； false：存在重复</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isRepeat</span>(<span class=\"params\">arr, key1, key2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (arr[i][key1] === arr[j][key1] &amp;&amp; arr[i][key2] === arr[j][key2]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用时 </span></span><br><span class=\"line\"> <span class=\"keyword\">let</span> temp = isRepeat(list, <span class=\"string\">&#x27;materialCode&#x27;</span>, <span class=\"string\">&#x27;projectId&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"根据状态返回中文\"><a class=\"anchor\" href=\"#根据状态返回中文\">#</a> 根据状态返回中文</h2>\n<p><figure class=\"highlight js\"><figcaption><span>codes</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据状态返回中文</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> getPlanStatus = <span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> enumStatus = &#123;</span><br><span class=\"line\">    <span class=\"number\">1</span>: <span class=\"string\">&#x27;已撤销&#x27;</span>,</span><br><span class=\"line\">    <span class=\"number\">2</span>: <span class=\"string\">&#x27;待拣货&#x27;</span>,</span><br><span class=\"line\">    <span class=\"number\">3</span>: <span class=\"string\">&#x27;待出库&#x27;</span>,</span><br><span class=\"line\">    <span class=\"number\">4</span>: <span class=\"string\">&#x27;已出库&#x27;</span>,</span><br><span class=\"line\">    <span class=\"number\">5</span>: <span class=\"string\">&#x27;待回库&#x27;</span>,</span><br><span class=\"line\">    <span class=\"number\">6</span>: <span class=\"string\">&#x27;已回库&#x27;</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> enumStatus[val];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br />\n<span class=\"label danger\">❤️筱何仔</span></p>\n",
            "tags": [
                "前端",
                "Vue"
            ]
        }
    ]
}